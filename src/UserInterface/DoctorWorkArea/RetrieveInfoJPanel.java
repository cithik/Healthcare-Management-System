/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.DoctorWorkArea;

import Business.Ecosystem;
import Business.Encounter.Encounter;
import Business.Encounter.EncounterHistory;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Patient.Patient;
import Business.Person.Person;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author krithika
 */
public class RetrieveInfoJPanel extends javax.swing.JPanel {
JPanel userProcessContainer;
EncounterHistory eh;
Enterprise enterprise;
UserAccount account;
Patient patientObj;
Network network;
    /**
     * Creates new form PatientEncountersJPanel
     */
    public RetrieveInfoJPanel(JPanel upc, UserAccount account, Patient patientObj,EncounterHistory eh,
            Enterprise enterprise, Network network) {
        initComponents();
        this.userProcessContainer=upc;
        this.eh = eh;
        this.patientObj=patientObj;
        this.account= account;
        this.enterprise = enterprise;
        this.network = network;
        populateTable(eh);
    }

    private void populateTable(EncounterHistory eh){
        DefaultTableModel model = (DefaultTableModel) encounterHistory.getModel();
        model.setRowCount(0);
        for (Encounter encounter : eh.getEncounterList()){
            Object[] row = new Object[2];
            row[0] = encounter;
            row[1] = encounter.getHospital(); 
            model.addRow(row);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        encounterHistory = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        ViewEncounter = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(51, 51, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        encounterHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Date", "Hospital"
            }
        ));
        jScrollPane1.setViewportView(encounterHistory);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 79, 375, 101));

        jButton1.setText("<<Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 211, -1, -1));

        ViewEncounter.setText("View Encounter");
        ViewEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewEncounterActionPerformed(evt);
            }
        });
        add(ViewEncounter, new org.netbeans.lib.awtextra.AbsoluteConstraints(199, 211, -1, -1));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setText("Basic Information");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);          // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
        
    private void ViewEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewEncounterActionPerformed
        // TODO add your handling code here:
        int selectedRow = encounterHistory.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        
        Encounter request = (Encounter)encounterHistory.getValueAt(selectedRow, 0);
        ViewEncounterJPanel processWorkRequestJPanel = new 
        ViewEncounterJPanel(userProcessContainer, account, patientObj, request, enterprise, network);
        userProcessContainer.add("ViewEncounters", processWorkRequestJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_ViewEncounterActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ViewEncounter;
    private javax.swing.JTable encounterHistory;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
